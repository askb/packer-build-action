---
# SPDX-License-Identifier: Apache-2.0
# Test Packer Build with OAuth Reusable Keys
#
# ⚠️ DISABLED: This workflow is currently disabled because OAuth with reusable keys
# (tailscale_use_ephemeral_keys: false) is not supported by the bastion action.
#
# The bastion VM uses cloud-init which cannot use OAuth directly. It requires either:
#   - OAuth with ephemeral keys (tailscale_use_ephemeral_keys: true) - RECOMMENDED
#   - Legacy auth key (tailscale_auth_key)
#
# This workflow is kept for reference but will always fail until the bastion action
# adds support for OAuth reusable keys on cloud-init based instances.

name: Test Packer Build (OAuth Reusable) [DISABLED]

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      packer_template:
        description: "Packer template to build"
        required: false
        type: string
        default: "builder.pkr.hcl"
      packer_vars:
        description: "Packer vars file"
        required: false
        type: string
        default: "ubuntu-22.04"
      debug_mode:
        description: "Enable debug logging"
        required: false
        type: boolean
        default: false
  # Disabled auto-triggers - workflow will only run via manual dispatch
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "examples/**"
  #     - "scripts/**"
  #     - "action.yaml"
  #     - ".github/workflows/test-build-oauth-reusable.yaml"
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - "examples/**"
  #     - "scripts/**"
  #     - "action.yaml"
  #     - ".github/workflows/test-build-oauth-reusable.yaml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check.outputs.has-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: check
        with:
          base: ${{ github.event.before || format('refs/heads/{0}', github.ref_name) }}
          filters: |
            has-changes:
              - 'examples/**'
              - 'scripts/**'
              - 'action.yaml'
              - '.github/workflows/**'

  test-packer-build:
    needs: prepare
    if: |
      needs.prepare.outputs.has-changes == 'true' ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ========================================
      # Step 1: Setup Bastion with OAuth Reusable Keys
      # ========================================
      - name: Setup OpenStack Bastion with Tailscale (OAuth Reusable)
        id: bastion
        uses: askb/tailscale-openstack-bastion-action@main
        with:
          operation: setup
          tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tailscale_use_ephemeral_keys: "false"
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD_B64 }}
          openstack_domain_name: ${{ secrets.OPENSTACK_DOMAIN_NAME }}
          openstack_region: ${{ secrets.OPENSTACK_REGION }}
          bastion_name: "packer-oauth-reuse-${{ github.run_id }}"
          bastion_flavor: "v3-standard-2"
          bastion_image: "Ubuntu 22.04.5 LTS (x86_64) [2025-03-27]"
          bastion_network: "odlci"
          debug_mode: ${{ inputs.debug_mode || 'false' }}

      # ========================================
      # Step 2: Run Packer Build Action
      # ========================================
      - name: Build Packer Image
        uses: ./
        with:
          mode: build
          packer_version: "1.11.2"
          packer_template: "examples/templates/builder.pkr.hcl"
          packer_vars_file: "examples/vars/ubuntu-22.04.pkrvars.hcl"
          path_prefix: "."
          bastion_ip: ${{ steps.bastion.outputs.bastion_ip }}
          bastion_ssh_user: "root"
          os_cloud: "openstack"
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD_B64 }}
          openstack_network_id: ${{ secrets.OPENSTACK_NETWORK_ID }}
          openstack_domain_name: ${{ secrets.OPENSTACK_DOMAIN_NAME }}

      # ========================================
      # Step 3: Teardown Bastion
      # ========================================
      - name: Teardown Bastion Host
        if: always()
        uses: askb/tailscale-openstack-bastion-action@main
        with:
          operation: teardown
          bastion_name: "packer-oauth-reuse-${{ github.run_id }}"
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD_B64 }}
          openstack_region: ${{ secrets.OPENSTACK_REGION }}

  summary:
    if: always()
    needs: [prepare, test-packer-build]
    runs-on: ubuntu-latest
    steps:
      - name: Build summary
        run: |
          {
            echo "## Packer Build Test Summary - OAuth Reusable Keys"
            echo ""
            echo "**Authentication Method:** OAuth with Reusable Keys"
            echo ""
            echo "- **Workflow:** ${{ github.workflow }}"
            echo "- **Run ID:** ${{ github.run_id }}"
            echo "- **Trigger:** ${{ github.event_name }}"
            echo "- **Branch:** ${{ github.ref_name }}"
            echo ""
          } >> "$GITHUB_STEP_SUMMARY"

          if [ "${{ needs.test-packer-build.result }}" == "success" ]; then
            echo "✅ **Build Status:** Success" >> "$GITHUB_STEP_SUMMARY"
          elif [ "${{ needs.test-packer-build.result }}" == "skipped" ]; then
            echo "⏭️ **Build Status:** Skipped (no relevant changes)" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "❌ **Build Status:** Failed" >> "$GITHUB_STEP_SUMMARY"
          fi
