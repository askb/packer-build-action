# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

name: Test Packer Build with Bastion

on:
  workflow_dispatch:
    inputs:
      template:
        description: "Packer template to build"
        required: true
        default: "templates/builder.pkr.hcl"
      vars_file:
        description: "Packer vars file"
        required: true
        default: "vars/ubuntu-22.04.pkrvars.hcl"

permissions:
  contents: read

jobs:
  integration-test:
    name: Integration Test - Build with Bastion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout packer-build-action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: action-repo

      - name: Checkout test repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: lfit/releng-common-packer
          path: target-repo
          submodules: recursive

      - name: Setup bastion
        id: bastion
        uses: askb/tailscale-openstack-bastion-action@main
        with:
          mode: setup
          tailscale_oauth_client_id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          tailscale_oauth_secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD }}
          openstack_network_id: ${{ secrets.OPENSTACK_NETWORK_ID }}
          bastion_timeout: "300"

      - name: Build with Packer
        id: build
        uses: ./action-repo
        with:
          mode: build
          bastion_ip: ${{ steps.bastion.outputs.bastion_ip }}
          bastion_ssh_user: ${{ steps.bastion.outputs.bastion_ssh_user }}
          packer_template: ${{ github.event.inputs.template }}
          packer_vars_file: ${{ github.event.inputs.vars_file }}
          packer_working_dir: "."
          path_prefix: "target-repo"
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD }}
          openstack_network_id: ${{ secrets.OPENSTACK_NETWORK_ID }}
          packer_version: "1.11.2"
          python_version: "3.11"
          ansible_version: "2.17.0"

      - name: Teardown bastion
        if: always()
        uses: askb/tailscale-openstack-bastion-action@main
        with:
          mode: teardown
          bastion_id: ${{ steps.bastion.outputs.bastion_id }}
          openstack_auth_url: ${{ secrets.OPENSTACK_AUTH_URL }}
          openstack_project_id: ${{ secrets.OPENSTACK_PROJECT_ID }}
          openstack_username: ${{ secrets.OPENSTACK_USERNAME }}
          openstack_password: ${{ secrets.OPENSTACK_PASSWORD }}

      - name: Summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "**Bastion IP:** ${{ steps.bastion.outputs.bastion_ip }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Status:** ${{ steps.build.outputs.build_status }}" >> $GITHUB_STEP_SUMMARY
          if [[ -n "${{ steps.build.outputs.image_name }}" ]]; then
            echo "**Image Name:** ${{ steps.build.outputs.image_name }}" >> $GITHUB_STEP_SUMMARY
          fi
